################################################################
# repo.wsu.edu nginx configuration
server {
	server_name    www.repo.wsu.edu;
	return 301     https://repo.wsu.edu$request_uri;
}

server {
	listen       80;
	server_name  repo.wsu.edu;
	root         /var/www/repo.wsu.edu;

	location / {
		index index.php;
		try_files $uri $uri/ /index.php$is_args$args;
	}

	# Allow cross domain requests for font files.
	location ~* \.(eot|ttf|woff)$ {
		add_header Access-Control-Allow-Origin *;
		expires 2d;
	}

	# Handle all static assets by serving the file directly. Add directives
	# to send expires headers and turn off 404 error logging.
	location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
		expires 2d;
	}

	# this prevents hidden files (beginning with a period) from being served
	location ~ /\. {
		access_log off;
		log_not_found off;
		deny all;
	}

	# Via https://github.com/h5bp/server-configs-nginx/
	#
	# Prevent a variety of file extensions associated with backups and configs
	# from being served.
		location ~* (?:\.(?:bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)|~)$ {
		access_log off;
		log_not_found off;
		deny all;
	}

	location ~ \.php$ {
		client_max_body_size 50M;
		try_files      $uri =404;

		# Include the fastcgi_params defaults provided by nginx
		include        /etc/nginx/fastcgi_params;
		fastcgi_read_timeout 30s;

		# SCRIPT_FILENAME is a required parameter for things to work properly,
		# but was missing in the default fastcgi_params on upgrade to nginx 1.4.
		# We define it here to be sure that it exists.
		fastcgi_param   SCRIPT_FILENAME         $document_root$fastcgi_script_name;

		# Use the upstream for php5-fpm that we defined in nginx.conf
		fastcgi_pass   php;

		# And get to serving the file!
		fastcgi_index  index.php;
	}
}

server {
	listen         443 ssl spdy;
	server_name    repo.wsu.edu;
	root           /var/www/repo.wsu.edu;

	# Enable SSL
	ssl                    on;
	ssl_certificate        /etc/nginx/ssl/repo.wsu.edu.1.cer;
	ssl_certificate_key    /etc/nginx/ssl/repo.wsu.edu.1.key;

	# Pick the allowed protocols
	ssl_protocols                TLSv1 TLSv1.1 TLSv1.2;

	# Configure perfect forward secrecy
	ssl_prefer_server_ciphers    on;
	ssl_ciphers                  ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
	ssl_dhparam                  /etc/nginx/ssl/dhparam.pem;

	# Set up a session cache for SSL resume
	ssl_session_cache      shared:SSL:10m;
	ssl_session_timeout    10m;

	# Do not overflow the SSL send buffer (causes extra round trips)
	ssl_buffer_size    8k;

	# Compress the SSL headers
	spdy_headers_comp    6;

	# Add SSL stapling
	ssl_stapling    on;
	resolver        8.8.8.8;

	# Announce the SPDY alternate protocal
	add_header    Alternate-Protocol 443:npn-spdy/3,443:npn-spdy/2;

	# Enable HTTP Strict Transport Security (HSTS)
	add_header    Strict-Transport-Security "max-age=31536000; includeSubdomains;";

    # Enables the Vary: Accept-Encoding header for gzipped content.
    gzip_vary on;

	location / {
		index index.php;
		try_files $uri $uri/ /index.php$is_args$args;
	}

	# Allow cross domain requests for font files.
	location ~* \.(eot|ttf|woff)$ {
		add_header Access-Control-Allow-Origin *;
		expires 2d;
	}

	# Handle all static assets by serving the file directly. Add directives
	# to send expires headers and turn off 404 error logging.
	location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
		expires 2d;
	}

	# this prevents hidden files (beginning with a period) from being served
	location ~ /\. {
		access_log off;
		log_not_found off;
		deny all;
	}

	# Via https://github.com/h5bp/server-configs-nginx/
	#
	# Prevent a variety of file extensions associated with backups and configs
	# from being served.
		location ~* (?:\.(?:bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)|~)$ {
		access_log off;
		log_not_found off;
		deny all;
	}

	location ~ \.php$ {
		client_max_body_size 2M;
		try_files      $uri =404;

		# Include the fastcgi_params defaults provided by nginx
		include        /etc/nginx/fastcgi_params;
		fastcgi_read_timeout 30s;

		# SCRIPT_FILENAME is a required parameter for things to work properly,
		# but was missing in the default fastcgi_params on upgrade to nginx 1.4.
		# We define it here to be sure that it exists.
		fastcgi_param   SCRIPT_FILENAME         $document_root$fastcgi_script_name;

		# Use the upstream for php5-fpm that we defined in nginx.conf
		fastcgi_pass   php;

		# And get to serving the file!
		fastcgi_index  index.php;
	}
}